#  Copyright (c) 2018-2023 Cloud Software Group, Inc.
#  
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  
#  1. Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#  
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#  
#  3. Neither the name of the copyright holder nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.

---
- name: Start Cluster
  hosts: localhost
  tasks:
  - name: include global variables
    include_vars: "../../../../target/classes/ansible-global.yml"

  - name: Create network example.com
    docker_network:
        name: example.com
        state: present

  - name: Start container A.{{ projectId }}
    docker_container:
       name: A.{{ projectId }}
       image: docker/{{ projectId }}:{{ projectId_ver }}
       hostname: A.example.com
       networks: 
          - name: example.com
            aliases: 
               - A.example.com
       env:
         STREAMING_NODENAME: A.{{ projectId }}
       state: started

  - name: Waiting for Node A to start
    shell: until docker logs A.{{ projectId }} | grep -q "COMMAND FINISHED"; do sleep 1; done

  - name: Start container B.{{ projectId }}
    docker_container:
       name: B.{{ projectId }}
       image: docker/{{ projectId }}:{{ projectId_ver }}
       hostname: B.example.com
       networks: 
          - name: example.com
            aliases: 
               - B.example.com
       env:
         STREAMING_NODENAME: B.{{ projectId }}
       state: started

  - name: Waiting for Node B to start
    shell: until docker logs B.{{ projectId }} | grep -q "COMMAND FINISHED"; do sleep 1; done
