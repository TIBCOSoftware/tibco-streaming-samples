<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2020, TIBCO Software Inc.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
  
  1. Redistributions of source code must retain the above copyright notice,
     this list of conditions and the following disclaimer.
  
  2. Redistributions in binary form must reproduce the above copyright notice,
     this list of conditions and the following disclaimer in the documentation
     and/or other materials provided with the distribution.
  
  3. Neither the name of the copyright holder nor the names of its contributors
     may be used to endorse or promote products derived from this software
     without specific prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- vim: set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab : -->

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tibco.ep.samples.web</groupId>
    <artifactId>prometheus-metrics-app</artifactId>
    <packaging>ep-application</packaging>
    <version>1.0.0</version>
    <name>Web: Prometheus Metrics Integration App</name>
    <description>How to integrate with Prometheus Metrics in TIBCO Streaming. - Application</description>

    <!-- common definitions for this version of StreamBase -->
    <parent>
        <groupId>com.tibco.ep.sb.parent</groupId>
        <artifactId>ep-application-samples
        </artifactId> <!-- replace with ep-application to avoid sample metadata -->
        <version>10.6.0-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <properties>
        <dockerDomain>example.com</dockerDomain>
        <skipDockerTests>true</skipDockerTests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.tibco.ep.samples.web</groupId>
            <artifactId>prometheus-metrics-ef</artifactId>
            <version>${project.version}</version>
            <type>ep-eventflow-fragment</type>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <profiles>
        <!-- if docker is available, start the Prometheus docker instance -->
        <profile>
            <id>Docker in local</id>
            <activation>
                <file>
                    <exists>/usr/local/bin/docker</exists>
                </file>
            </activation>
            <properties>
                <skipDockerTests>${skipTests}</skipDockerTests>
            </properties>
        </profile>
        <profile>
            <id>Docker in bin</id>
            <activation>
                <file>
                    <exists>/usr/bin/docker</exists>
                </file>
            </activation>
            <properties>
                <skipDockerTests>${skipTests}</skipDockerTests>
            </properties>
        </profile>
        <profile>
            <id>Docker in C:</id>
            <activation>
                <file>
                    <exists>C:\Program Files\Docker\Docker\resources\bin\docker.exe</exists>
                </file>
            </activation>
            <properties>
                <skipDockerTests>${skipTests}</skipDockerTests>
            </properties>
        </profile>
    </profiles>


    <build>

        <resources>
            <resource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/prometheus</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!-- Get the host name. -->
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                project.properties["hostname"] = InetAddress.getLocalHost().getHostName()
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Assign free ports to the SB Node Web Server and Prometheus -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-web-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <portNames>
                                <portName>streambase.node.admin.web.port</portName>
                                <portName>prometheus.metrics.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure application node start/stop -->
            <plugin>
                <groupId>com.tibco.ep</groupId>
                <artifactId>ep-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <skipTests>${skipLocalTests}</skipTests>
                    <nodeDeployFile>${project.build.directory}/classes/deploy/node_deploy.conf</nodeDeployFile>
                    <nodes>
                        <node>A</node>
                    </nodes>
                </configuration>

                <executions>

                    <execution>
                        <id>start nodes</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start-nodes</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>

                    <execution>
                        <id>stop nodes</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop-nodes</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Configure Prometheus start / stop -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start nodes</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <startParallel>true</startParallel>
                            <skip>${skipDockerTests}</skip>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>prom/prometheus</name>
                                    <alias>${project.artifactId}_instance</alias>
                                    <run>
                                        <ports>${prometheus.metrics.port}:9090</ports>
                                        <network>
                                            <name>${dockerDomain}</name>
                                            <alias>A.${dockerDomain}</alias>
                                        </network>
                                        <hostname>${project.artifactId}_instance</hostname>
                                        <env>
                                            <NODENAME>${project.artifactId}_instance</NODENAME>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <namingStrategy>alias</namingStrategy>
                                        <volumes>
                                            <bind>
                                                <volume>
                                                    ${project.build.directory}/classes/prometheus.yml:/etc/prometheus/prometheus.yml
                                                </volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </image>
                            </images>

                        </configuration>
                    </execution>
                    <execution>
                        <id>stop nodes</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${skipDockerTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- wait for application to finish starting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>wait for applications to start</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- wait for max 10 minutes checking every 500ms -->
                                <waitfor maxwait="10" maxwaitunit="minute" checkevery="500"
                                         timeoutproperty="atimeout">
                                    <resourcecontains
                                            resource="${project.build.directory}/test-nodes/A.${project.artifactId}/logs/default-engine-for-com.tibco.ep.samples.web.prometheus-metrics-ef.log"
                                            substring=" sbd at "/>
                                </waitfor>
                                <fail message="Application on node A failed to startup in time">
                                    <condition>
                                        <isset property="atimeout"/>
                                    </condition>
                                </fail>
                            </target>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run the test class -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- If the Prometheus docker container isn't started, we cannot run the test.-->
                            <skipITs>${skipDockerTests}</skipITs>
                            <systemPropertyVariables>
                                <prometheus.metrics.port>${prometheus.metrics.port}</prometheus.metrics.port>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit4</artifactId>
                        <version>3.0.0-M3</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

</project>
